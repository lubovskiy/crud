// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package crud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0xd2, 0x4d, 0x4b, 0xe3, 0x40,
	0x18, 0x07, 0x70, 0xba, 0x74, 0x4b, 0xc9, 0x6e, 0xe9, 0x76, 0xca, 0x5e, 0xb2, 0x2f, 0x94, 0x1e,
	0x97, 0x6d, 0xe2, 0xcb, 0xc9, 0x9b, 0xb1, 0x7a, 0x10, 0x3c, 0x89, 0x22, 0x88, 0x97, 0x69, 0x66,
	0x88, 0xc1, 0x92, 0x89, 0x99, 0x49, 0x3d, 0x37, 0x3d, 0x78, 0xd0, 0x83, 0x54, 0x2f, 0x9e, 0xfc,
	0x00, 0x5e, 0x6a, 0x4f, 0xb5, 0xd2, 0xf8, 0x15, 0x9e, 0xc1, 0xaf, 0xe0, 0x07, 0x91, 0xc6, 0xd4,
	0x34, 0x6a, 0x4f, 0x82, 0xa7, 0xc0, 0xf3, 0x7f, 0x78, 0xfe, 0x3f, 0xc2, 0x28, 0x05, 0x4e, 0xbd,
	0x96, 0x6d, 0x52, 0xcd, 0xf5, 0x98, 0x60, 0x28, 0x8f, 0x5d, 0x5b, 0x33, 0x3d, 0x9f, 0xa8, 0x45,
	0x77, 0x9f, 0x39, 0xb4, 0xc1, 0xd8, 0xc1, 0x73, 0xa4, 0xfe, 0xb6, 0x18, 0xb3, 0x9a, 0x54, 0xc7,
	0xae, 0xad, 0x63, 0xc7, 0x61, 0x02, 0x0b, 0x9b, 0x39, 0x3c, 0x4e, 0xff, 0x47, 0x1f, 0xb3, 0x66,
	0x51, 0xa7, 0xc6, 0x8f, 0xb0, 0x65, 0x51, 0x4f, 0x67, 0x6e, 0xb4, 0xf1, 0x76, 0x7b, 0xa1, 0xf3,
	0x55, 0xc9, 0xd7, 0x99, 0x23, 0xb0, 0x29, 0x38, 0xba, 0xce, 0x28, 0xdf, 0x37, 0x6c, 0x2e, 0x5e,
	0x06, 0x7f, 0xb4, 0x89, 0x42, 0x9b, 0x9e, 0x6f, 0xd2, 0x43, 0x9f, 0x72, 0xa1, 0xfe, 0x9d, 0x15,
	0x73, 0x97, 0x39, 0x9c, 0x56, 0xf7, 0xba, 0xc6, 0x32, 0x4a, 0x5d, 0x54, 0xe7, 0xe0, 0x0a, 0x42,
	0xb8, 0x93, 0x1d, 0x79, 0x0c, 0x03, 0x19, 0xc8, 0xd3, 0x8a, 0x6c, 0xc3, 0x3d, 0x0c, 0x64, 0x1b,
	0x42, 0x18, 0x56, 0x60, 0x08, 0x21, 0x8c, 0x64, 0x00, 0x3d, 0x18, 0xca, 0x00, 0x42, 0xe8, 0x07,
	0x0f, 0x8f, 0xe7, 0x5f, 0xca, 0xa8, 0xa4, 0xb7, 0xe6, 0x75, 0x33, 0xbe, 0xa2, 0x37, 0x6d, 0x2e,
	0xd0, 0x59, 0x46, 0x51, 0x0c, 0x42, 0xe2, 0xd3, 0xe8, 0x57, 0x82, 0x49, 0xa6, 0x13, 0x69, 0x31,
	0x09, 0xd7, 0xf9, 0x9a, 0xe7, 0x55, 0xb7, 0xba, 0xc6, 0x12, 0xfa, 0x96, 0x2c, 0x72, 0xf5, 0x1f,
	0x5c, 0x40, 0x08, 0x37, 0xd0, 0x83, 0x7e, 0x2c, 0x83, 0xd1, 0x18, 0x20, 0x4f, 0xe0, 0xf6, 0x95,
	0x2b, 0x32, 0x21, 0xf4, 0x23, 0x65, 0xc2, 0x84, 0xa0, 0xcb, 0x8c, 0x52, 0xd8, 0x76, 0x09, 0x16,
	0x74, 0xa2, 0x9a, 0xfa, 0x45, 0xa9, 0x60, 0x26, 0x6c, 0xe7, 0xc3, 0xb0, 0x9f, 0xa8, 0x9c, 0x82,
	0xf9, 0x51, 0x6f, 0x64, 0x5b, 0xa5, 0x4d, 0xfa, 0xae, 0x2d, 0x15, 0x7c, 0xa2, 0x8d, 0x44, 0xbd,
	0x2b, 0xa5, 0xae, 0x91, 0x47, 0x39, 0x25, 0x5b, 0xf7, 0x7c, 0xb2, 0x9b, 0x1d, 0x37, 0x36, 0x72,
	0xd1, 0xfb, 0x5c, 0x7c, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x14, 0xbd, 0x2f, 0x17, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContactsClient is the client API for Contacts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactsClient interface {
	ListContacts(ctx context.Context, in *ListContactsRequest, opts ...grpc.CallOption) (*ListContactsResponse, error)
	AddContact(ctx context.Context, in *AddContactRequest, opts ...grpc.CallOption) (*IsErr, error)
	UpdateContact(ctx context.Context, in *UpdateContactRequest, opts ...grpc.CallOption) (*IsErr, error)
	DeleteContact(ctx context.Context, in *DeleteContactRequest, opts ...grpc.CallOption) (*IsErr, error)
}

type contactsClient struct {
	cc grpc.ClientConnInterface
}

func NewContactsClient(cc grpc.ClientConnInterface) ContactsClient {
	return &contactsClient{cc}
}

func (c *contactsClient) ListContacts(ctx context.Context, in *ListContactsRequest, opts ...grpc.CallOption) (*ListContactsResponse, error) {
	out := new(ListContactsResponse)
	err := c.cc.Invoke(ctx, "/api.crud.Contacts/ListContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) AddContact(ctx context.Context, in *AddContactRequest, opts ...grpc.CallOption) (*IsErr, error) {
	out := new(IsErr)
	err := c.cc.Invoke(ctx, "/api.crud.Contacts/AddContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) UpdateContact(ctx context.Context, in *UpdateContactRequest, opts ...grpc.CallOption) (*IsErr, error) {
	out := new(IsErr)
	err := c.cc.Invoke(ctx, "/api.crud.Contacts/UpdateContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsClient) DeleteContact(ctx context.Context, in *DeleteContactRequest, opts ...grpc.CallOption) (*IsErr, error) {
	out := new(IsErr)
	err := c.cc.Invoke(ctx, "/api.crud.Contacts/DeleteContact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactsServer is the server API for Contacts service.
type ContactsServer interface {
	ListContacts(context.Context, *ListContactsRequest) (*ListContactsResponse, error)
	AddContact(context.Context, *AddContactRequest) (*IsErr, error)
	UpdateContact(context.Context, *UpdateContactRequest) (*IsErr, error)
	DeleteContact(context.Context, *DeleteContactRequest) (*IsErr, error)
}

// UnimplementedContactsServer can be embedded to have forward compatible implementations.
type UnimplementedContactsServer struct {
}

func (*UnimplementedContactsServer) ListContacts(ctx context.Context, req *ListContactsRequest) (*ListContactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContacts not implemented")
}
func (*UnimplementedContactsServer) AddContact(ctx context.Context, req *AddContactRequest) (*IsErr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContact not implemented")
}
func (*UnimplementedContactsServer) UpdateContact(ctx context.Context, req *UpdateContactRequest) (*IsErr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContact not implemented")
}
func (*UnimplementedContactsServer) DeleteContact(ctx context.Context, req *DeleteContactRequest) (*IsErr, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContact not implemented")
}

func RegisterContactsServer(s *grpc.Server, srv ContactsServer) {
	s.RegisterService(&_Contacts_serviceDesc, srv)
}

func _Contacts_ListContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).ListContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.crud.Contacts/ListContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).ListContacts(ctx, req.(*ListContactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_AddContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).AddContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.crud.Contacts/AddContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).AddContact(ctx, req.(*AddContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_UpdateContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).UpdateContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.crud.Contacts/UpdateContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).UpdateContact(ctx, req.(*UpdateContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contacts_DeleteContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServer).DeleteContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.crud.Contacts/DeleteContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServer).DeleteContact(ctx, req.(*DeleteContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contacts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.crud.Contacts",
	HandlerType: (*ContactsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListContacts",
			Handler:    _Contacts_ListContacts_Handler,
		},
		{
			MethodName: "AddContact",
			Handler:    _Contacts_AddContact_Handler,
		},
		{
			MethodName: "UpdateContact",
			Handler:    _Contacts_UpdateContact_Handler,
		},
		{
			MethodName: "DeleteContact",
			Handler:    _Contacts_DeleteContact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
